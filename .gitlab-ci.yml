variables:
        IMAGE_NAME: davidgavrilyuk/project-vacations
        IMAGE_TAG: vacations-1.0

stages:
  - build
  - deploy

#build_image:
#  stage: build
#  image: docker:20.10.16
#  services:
#    - docker:20.10.16-dind
#  variables:
#    DOCKER_TLS_CERTDIR: "/certs"
#  before_script:
#    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
#  script:
#    - docker-compose build
#    - docker images
#    - docker tag project-vacations_database:latest $IMAGE_NAME:latest-database
#    - docker tag project-vacations_backend:latest $IMAGE_NAME:latest-backend
#    - docker tag project-vacations_frontend:latest $IMAGE_NAME:latest-frontend
#    - docker push $IMAGE_NAME:latest-database
#    - docker push $IMAGE_NAME:latest-backend
#    - docker push $IMAGE_NAME:latest-frontend


deploy:
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@206.81.21.198 "
        docker login -u $REGISTRY_USER -p $REGISTRY_PASS &&
        if [ \"\$(docker ps -aq)\" ]; then docker stop \$(docker ps -aq); fi &&
        if [ \"\$(docker ps -aq)\" ]; then docker rm \$(docker ps -aq); fi"
    - scp -o StrictHostKeyChecking=no -i $SSH_KEY -r /builds/David-Gavrilyuk/Project-Vacations/* root@206.81.21.198:/root/vacations
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@206.81.21.198 "
        if [ \"\$(docker ps -aq)\" ]; then docker stop \$(docker ps -aq); fi &&
        if [ \"\$(docker ps -aq)\" ]; then docker rm \$(docker ps -aq); fi &&
        if [ \"\$(docker images -aq)\" ]; then docker rmi \$(docker images -aq); fi &&
        docker volume prune -f &&
        cd vacations && 
        docker-compose up -d --build"



#        docker network create --driver bridge my-net &&
#        docker run -d -p 3307:3306 --network my-net $IMAGE_NAME:latest-database &&
#        docker run -d -p 4000:4000 --network my-net $IMAGE_NAME:latest-backend &&
#        docker run -d -p 3000:3000 --network my-net $IMAGE_NAME:latest-frontend"

